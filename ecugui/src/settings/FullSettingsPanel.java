/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package settings;

import exceptions.EcuapassExceptions;
import exceptions.EcuapassExceptions.SettingsError;
import java.awt.Component;
import java.awt.Container;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import main.Utils;

public class FullSettingsPanel extends javax.swing.JPanel {

    FullSettingsController controller;
    JDialog settingsDialog;

    public FullSettingsPanel() {
        initComponents();
        Utils.applyUppercaseNoSpaces(empresaField);
        this.passwordField.setText("112233");
        enableSettings(false);

    }

    public void setController(FullSettingsController controller) {
        this.controller = controller;
    }

    // Return settings displayed on the panel
    public Map getDataValues() {
        // Create a JSON object
        LinkedHashMap<String, String> settingsDatos = new LinkedHashMap<>();
        settingsDatos.put("empresa", empresaField.getText());
        settingsDatos.putAll(datosPanel.getValues());
        settingsDatos.putAll(credentialsPanel.getValues());

        return settingsDatos;
    }

    // Set values to data values
    public void setValues(Map settings) throws EcuapassExceptions.SettingsError {
        try {
            empresaField.setText(controller.getValue("datos", "empresa"));
            datosPanel.setValues(controller.getValue("datos"));
            credentialsPanel.setValues(controller.getValue("datos"));
            configPanelCartaporte.setValues(controller.getValue("cartaporte"));
            configPanelManifiesto.setValues(controller.getValue("manifiesto"));
        } catch (Exception ex) {
            Logger.getLogger(SettingsController.class.getName()).log(Level.SEVERE, null, ex);
            throw new EcuapassExceptions.SettingsError("Error leyendo configuración de empresa");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        feedbackView = new settings.FeedbackView();
        settingsSplitPanel = new javax.swing.JSplitPane();
        containerPanelData = new javax.swing.JPanel();
        panelData = new javax.swing.JPanel();
        ingresoPanel = new javax.swing.JPanel();
        empresaLabel = new javax.swing.JLabel();
        empresaField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new settings.PasswordFieldWithToggle();
        enableSettingsButton = new javax.swing.JButton();
        datosPanel = new settings.EmpresaPanel();
        credentialsPanel = new settings.CredentialsPanel();
        containerPanelConfig = new javax.swing.JTabbedPane();
        tabCartaportePanel = new javax.swing.JPanel();
        configPanelCartaporte = new settings.ConfigPanelCartaporte();
        tabManifiestoPanel = new javax.swing.JPanel();
        configPanelManifiesto = new settings.ConfigPanelManifiesto();
        panelSaveCancel = new javax.swing.JPanel();
        guardarButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());
        add(feedbackView, java.awt.BorderLayout.PAGE_START);

        containerPanelData.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Empresa:"));
        containerPanelData.setLayout(new java.awt.BorderLayout());

        panelData.setLayout(new java.awt.GridBagLayout());

        ingresoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingreso:"));
        ingresoPanel.setEnabled(false);
        ingresoPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        ingresoPanel.setLayout(new java.awt.GridBagLayout());

        empresaLabel.setText("Empresa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        ingresoPanel.add(empresaLabel, gridBagConstraints);

        empresaField.setText("ALCOMEXCARGO");
        empresaField.setMinimumSize(new java.awt.Dimension(100, 27));
        empresaField.setPreferredSize(new java.awt.Dimension(15, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 137;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        ingresoPanel.add(empresaField, gridBagConstraints);

        passwordLabel.setText("Contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        ingresoPanel.add(passwordLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        ingresoPanel.add(passwordField, gridBagConstraints);

        enableSettingsButton.setText("Habilitar");
        enableSettingsButton.setPreferredSize(new java.awt.Dimension(150, 26));
        enableSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableSettingsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        ingresoPanel.add(enableSettingsButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.3;
        panelData.add(ingresoPanel, gridBagConstraints);

        datosPanel.setMinimumSize(new java.awt.Dimension(500, 244));
        datosPanel.setPreferredSize(new java.awt.Dimension(500, 244));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.4;
        panelData.add(datosPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.2;
        panelData.add(credentialsPanel, gridBagConstraints);

        containerPanelData.add(panelData, java.awt.BorderLayout.CENTER);

        settingsSplitPanel.setLeftComponent(containerPanelData);

        containerPanelConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración:"));
        containerPanelConfig.setPreferredSize(new java.awt.Dimension(400, 100));

        tabCartaportePanel.setLayout(new java.awt.BorderLayout());

        configPanelCartaporte.setPreferredSize(new java.awt.Dimension(400, 400));
        tabCartaportePanel.add(configPanelCartaporte, java.awt.BorderLayout.CENTER);

        containerPanelConfig.addTab("Cartaporte", tabCartaportePanel);

        tabManifiestoPanel.setLayout(new java.awt.BorderLayout());

        configPanelManifiesto.setPreferredSize(new java.awt.Dimension(400, 400));
        tabManifiestoPanel.add(configPanelManifiesto, java.awt.BorderLayout.PAGE_START);

        containerPanelConfig.addTab("Manifiesto", tabManifiestoPanel);

        settingsSplitPanel.setRightComponent(containerPanelConfig);

        add(settingsSplitPanel, java.awt.BorderLayout.CENTER);

        panelSaveCancel.setEnabled(false);
        panelSaveCancel.setOpaque(false);
        panelSaveCancel.setPreferredSize(new java.awt.Dimension(200, 37));

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        panelSaveCancel.add(guardarButton);

        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });
        panelSaveCancel.add(salirButton);

        add(panelSaveCancel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (settingsDialog != null) {
                controller.onSalirButton();
                settingsDialog.dispose();
            } else {
                controller.onSalirButton();
            }
        } catch (SettingsError ex) {
            JOptionPane.showMessageDialog(this, "Problemas con la configuración de la empresa", "Alerta Configuración", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salirButtonActionPerformed

    private void enableSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableSettingsButtonActionPerformed
        String text = this.enableSettingsButton.getText();
        if (text.equals("Habilitar")) {
            controller.onHabilitarIngreso(this.getEmpresa(), this.getPassword());
        } else {
            this.enableSettings(false);
        }

        this.passwordField.setText("");
    }//GEN-LAST:event_enableSettingsButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        Map datosValues = this.getDataValues();
        Map cartaporteValues = configPanelCartaporte.getValues();
        Map manifiestoValues = configPanelManifiesto.getValues();

        Map settings = new LinkedHashMap<String, LinkedHashMap<String, String>>();
        settings.put("datos", datosValues);
        settings.put("cartaporte", cartaporteValues);
        settings.put("manifiesto", manifiestoValues);
        controller.onUpdateSettings(settings);
        this.configPanelCartaporte.resetButtonColors();
        this.configPanelManifiesto.resetButtonColors();
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void enableComponentsPanel(Container container, boolean enableFlag) {
        container.setEnabled(enableFlag);
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enableFlag);
            if (component instanceof Container) {
                enableComponentsPanel((Container) component, enableFlag);
            }
        }
    }

    public String getEmpresa() {
        String empresa = this.empresaField.getText().trim();
        return empresa;
    }

    public String getPassword() {
        String password = passwordField.getText().trim();
        return password;
    }

    public void setNickname(String nickname) {
        datosPanel.setNickname(nickname);
    }

    // Method to show the panel as a dialog
    public void showAsDialog(JFrame parent) {
        this.salirButton.setText("Salir");
        settingsDialog = new JDialog(parent, "Inicialización de la Aplicación", true);
        settingsDialog.getContentPane().add(this); // Add the panel itself to the dialog
        settingsDialog.pack(); // Automatically size the dialog to fit its content
        settingsDialog.setLocationRelativeTo(parent); // Center the dialog
        settingsDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        settingsDialog.setVisible(true);
    }

    public void enableSettings(boolean enableFlag) {
        this.enableComponentsPanel(this, enableFlag);
        this.enableComponentsPanel(this.datosPanel, enableFlag);
        this.datosPanel.enableNickname(false);
        this.enableComponentsPanel(this.credentialsPanel, enableFlag);
        this.enableComponentsPanel(this.ingresoPanel, true);
        this.enableComponentsPanel(this.feedbackView, true);

        if (enableFlag == false) {
            this.enableSettingsButton.setText("Habilitar");
        } else {
            this.enableSettingsButton.setText("Deshabilitar");
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private settings.ConfigPanelCartaporte configPanelCartaporte;
    private settings.ConfigPanelManifiesto configPanelManifiesto;
    private javax.swing.JTabbedPane containerPanelConfig;
    private javax.swing.JPanel containerPanelData;
    private settings.CredentialsPanel credentialsPanel;
    private settings.EmpresaPanel datosPanel;
    private javax.swing.JTextField empresaField;
    private javax.swing.JLabel empresaLabel;
    private javax.swing.JButton enableSettingsButton;
    private settings.FeedbackView feedbackView;
    private javax.swing.JButton guardarButton;
    private javax.swing.JPanel ingresoPanel;
    private javax.swing.JPanel panelData;
    private javax.swing.JPanel panelSaveCancel;
    private settings.PasswordFieldWithToggle passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton salirButton;
    private javax.swing.JSplitPane settingsSplitPanel;
    private javax.swing.JPanel tabCartaportePanel;
    private javax.swing.JPanel tabManifiestoPanel;
    // End of variables declaration//GEN-END:variables

    void println(String s) {
        this.feedbackView.println(s);
    }
}
