package settings;

import exceptions.EcuapassExceptions;
import exceptions.EcuapassExceptions.SettingsError;
import java.awt.Component;
import java.awt.Container;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import main.Utils;

public class SettingsPanel extends javax.swing.JPanel {

    SettingsController controller;
    JDialog settingsDialog;

    public SettingsPanel() {
        initComponents();
        //enableSettings(false);
        this.configTabs.setEnabledAt(1, false);
        this.configTabs.setEnabledAt(2, true);
    }

    public void setController(SettingsController controller) {
        this.controller = controller;
        this.empresaPanel.setController (this.controller);
        this.credentialsPanel.setController (this.controller);
    }

    // Return settings displayed on the panel
    public Map getValues() {
        // Create a JSON object
        LinkedHashMap<String, String> settingsDatos = new LinkedHashMap<>();
        settingsDatos.putAll (this.empresaPanel.getValues());
        settingsDatos.putAll (this.credentialsPanel.getValues());

        return settingsDatos;
    }

    // Set values to data values
    public void setValues(Map settings) throws EcuapassExceptions.SettingsError {
        try {
            this.empresaPanel.setValues (controller.getSettingsValue ("datos"));
            credentialsPanel.setValues(controller.getSettingsValue("datos"));
            configPanelCartaporte.setValues(controller.getSettingsValue("cartaporte"));
            configPanelManifiesto.setValues(controller.getSettingsValue("manifiesto"));
        } catch (Exception ex) {
            Logger.getLogger(SettingsController.class.getName()).log(Level.SEVERE, null, ex);
            throw new EcuapassExceptions.SettingsError("Error leyendo configuración de empresa");
        }
    }
    
    // Fill settings with empresa full name and codebini URL
    void setEmpresaCodebini(String empresaCodebini, String URL) {
        this.empresaPanel.setFullName (empresaCodebini);
        this.empresaPanel.setUrl (URL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configTabs = new javax.swing.JTabbedPane();
        panelData = new javax.swing.JPanel();
        empresaPanel = new settings.EmpresaPanel();
        jSeparator1 = new javax.swing.JSeparator();
        credentialsPanel = new settings.CredentialsPanel();
        containerPanelConfig = new javax.swing.JTabbedPane();
        tabCartaportePanel = new javax.swing.JPanel();
        configPanelCartaporte = new settings.ConfigPanelCartaporte();
        tabManifiestoPanel = new javax.swing.JPanel();
        configPanelManifiesto = new settings.ConfigPanelManifiesto();
        feedbackView = new settings.FeedbackView();
        panelSaveCancel = new javax.swing.JPanel();
        guardarButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        panelData.setLayout(new javax.swing.BoxLayout(panelData, javax.swing.BoxLayout.Y_AXIS));
        panelData.add(empresaPanel);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 30));
        panelData.add(jSeparator1);
        panelData.add(credentialsPanel);

        configTabs.addTab("Empresa", panelData);

        containerPanelConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración:"));
        containerPanelConfig.setPreferredSize(new java.awt.Dimension(400, 100));

        tabCartaportePanel.setLayout(new java.awt.BorderLayout());

        configPanelCartaporte.setPreferredSize(new java.awt.Dimension(400, 400));
        tabCartaportePanel.add(configPanelCartaporte, java.awt.BorderLayout.CENTER);

        containerPanelConfig.addTab("Cartaporte", tabCartaportePanel);

        tabManifiestoPanel.setLayout(new java.awt.BorderLayout());

        configPanelManifiesto.setPreferredSize(new java.awt.Dimension(400, 400));
        tabManifiestoPanel.add(configPanelManifiesto, java.awt.BorderLayout.PAGE_START);

        containerPanelConfig.addTab("Manifiesto", tabManifiestoPanel);

        configTabs.addTab("Configuración", containerPanelConfig);
        configTabs.addTab("Feedback", feedbackView);

        add(configTabs, java.awt.BorderLayout.CENTER);

        panelSaveCancel.setEnabled(false);
        panelSaveCancel.setOpaque(false);
        panelSaveCancel.setPreferredSize(new java.awt.Dimension(200, 37));

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        panelSaveCancel.add(guardarButton);

        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });
        panelSaveCancel.add(salirButton);

        add(panelSaveCancel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (settingsDialog != null) {
                controller.onSalirButton();
                settingsDialog.dispose();
            } else {
                controller.onSalirButton();
            }
        } catch (SettingsError ex) {
            JOptionPane.showMessageDialog(this, "Problemas con la configuración de la empresa", "Alerta Configuración", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salirButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        Map datosValues = this.getValues();
        Map cartaporteValues = configPanelCartaporte.getValues();
        Map manifiestoValues = configPanelManifiesto.getValues();

        Map settings = new LinkedHashMap<String, LinkedHashMap<String, String>>();
        settings.put("datos", datosValues);
        settings.put("cartaporte", cartaporteValues);
        settings.put("manifiesto", manifiestoValues);
        controller.onSaveSettings (settings);
        this.configPanelCartaporte.resetButtonColors();
        this.configPanelManifiesto.resetButtonColors();
    }//GEN-LAST:event_guardarButtonActionPerformed

    public void enableSettings(boolean enableFlag) {
        Utils.enableComponentsPanel(this, enableFlag);
        Utils.enableComponentsPanel(this.credentialsPanel, enableFlag);
        Utils.enableComponentsPanel(this.empresaPanel, true);
        Utils.enableComponentsPanel(this.feedbackView, false);
        this.configTabs.setEnabledAt(2, false);
    }


    // Method to show the panel as a dialog
    public void showAsDialog(JFrame parent) {
        this.salirButton.setText("Salir");
        settingsDialog = new JDialog(parent, "Inicialización de la Aplicación", true);
        settingsDialog.getContentPane().add(this); // Add the panel itself to the dialog
        settingsDialog.pack(); // Automatically size the dialog to fit its content
        settingsDialog.setLocationRelativeTo(parent); // Center the dialog
        settingsDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        settingsDialog.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private settings.ConfigPanelCartaporte configPanelCartaporte;
    private settings.ConfigPanelManifiesto configPanelManifiesto;
    private javax.swing.JTabbedPane configTabs;
    private javax.swing.JTabbedPane containerPanelConfig;
    private settings.CredentialsPanel credentialsPanel;
    private settings.EmpresaPanel empresaPanel;
    private settings.FeedbackView feedbackView;
    private javax.swing.JButton guardarButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panelData;
    private javax.swing.JPanel panelSaveCancel;
    private javax.swing.JButton salirButton;
    private javax.swing.JPanel tabCartaportePanel;
    private javax.swing.JPanel tabManifiestoPanel;
    // End of variables declaration//GEN-END:variables

    void println(String s) {
        this.feedbackView.println(s);
    }
}
